# Slave Voyages Data Cleaning Script
# ----------------------------------
# This R script initiates my data analysis of the Slave Voyages dataset, focusing on cleaning,
# restructuring, and preparing the raw data for SQL-based completeness audits and Tableau visualization.
#
# Originally developed as part of the Google Data Analytics Certificate and later expanded independently.
#
# Key tasks:
# - Import raw .sav file using haven
# - Clean column names and data types
# - Handle missing values and convert coded data
# - Export cleaned data to CSVs for use in BigQuery and Tableau
#
# Data source: https://www.slavevoyages.org/voyage/downloads
# Author: Edward Parlati
# Date: April 17, 2025

### Load libraries
if (!requireNamespace("haven", quietly = TRUE)) install.packages("haven")
library(haven)
if (!requireNamespace("readr", quietly = TRUE)) install.packages("readr")
library(readr)
if (!requireNamespace("tidyverse", quietly = TRUE)) install.packages("tidyverse")
library(tidyverse)
if (!requireNamespace("dplyr", quietly = TRUE)) install.packages("dplyr")
library(dplyr)
if (!requireNamespace("lubridate", quietly = TRUE)) install.packages("lubridate")
library(lubridate)
if (!requireNamespace("dm", quietly = TRUE)) install.packages("dm")
library(dm)
if (!requireNamespace("DiagrammeR", quietly = TRUE)) install.packages("DiagrammeR")
library(DiagrammeR)
if (!requireNamespace("DiagrammeRsvg", quietly = TRUE)) install.packages("DiagrammeRsvg")
library(DiagrammeRsvg)
if (!requireNamespace("rsvg", quietly = TRUE)) install.packages("rsvg")
library(rsvg)

### Retrieve files from the Slave Voyages website at https://www.slavevoyages.org/voyage/downloads#full-versions-of-the-trans-atlantic-slave-trade-database/0/en/

  ## Dataset tastdb-exp-2020.sav from https://www.slavevoyages.org/documents/download/tastdb-exp-2020.sav
  ## SPSS Codebook from https://www.slavevoyages.org/documents/download/SPSS_Codebook_2023-11-06.pdf

### Load the dataset
voyages_dataset <- read_sav("tastdb-exp-2020.sav")
glimpse(voyages_dataset)

### Save dataset as CSV
write_csv(voyages_dataset, file = "voyages_dataset.csv", na = "")

### Rename column names utilizing the created SQL schema. 274 columns,36108 rows
colnames(voyages_dataset) <- c("voyage_id",
                                  "adult_embark_total",
                                  "adult_death_passage",
                                  "adult_disembark_total",
                                  "secondary_sale_location",
                                  "tertiary_sale_location",
                                  "adult_embark_port1",
                                  "adult_died_passage",
                                  "adult_disembark_port1",
                                  "adult_embark_port2",
                                  "adult_embark_port3",
                                  "adult_disembark_port2",
                                  "adult_arrival_total",
                                  "primary_disembark_port",
                                  "secondary_disembark_port",
                                  "boy_embark_port1",
                                  "boy_died_passage",
                                  "boy_disembark_port1",
                                  "boy_embark_port2",
                                  "boy_embark_port3",
                                  "boy_disembark_port2",
                                  "boy_arrival_total",
                                  "pct_boy_embark",
                                  "pct_boy_landed",
                                  "pct_boy_arrival",
                                  "captain_1_name",
                                  "captain_2_name",
                                  "captain_3_name",
                                  "child_embark_total",
                                  "child_death_passage",
                                  "child_disembark_total",
                                  "child_embark_port1",
                                  "child_died_passage",
                                  "child_disembark_port1",
                                  "child_embark_port2",
                                  "child_embark_port3",
                                  "child_disembark_port2",
                                  "child_arrival_total",
                                  "pct_child_embark",
                                  "pct_child_landed",
                                  "pct_child_arrival",
                                  "construction_region",
                                  "crew_unspecified",
                                  "crew_initial",
                                  "crew_after_purchase",
                                  "crew_first_landing",
                                  "crew_return_start",
                                  "crew_final",
                                  "crew_died_total",
                                  "slave_purchase_start_day",
                                  "slave_purchase_start_month",
                                  "slave_purchase_start_year",
                                  "primary_landing_day",
                                  "primary_landing_month",
                                  "primary_landing_year",
                                  "secondary_landing_day",
                                  "secondary_landing_month",
                                  "secondary_landing_year",
                                  "tertiary_landing_day",
                                  "tertiary_landing_month",
                                  "tertiary_landing_year",
                                  "voyage_end_day",
                                  "voyage_end_month",
                                  "voyage_end_year",
                                  "slave_purchase_date",
                                  "voyage_start_date",
                                  "voyage_start_day",
                                  "return_departure_date",
                                  "voyage_start_month",
                                  "voyage_start_year",
                                  "voyage_end_date",
                                  "primary_landing_date",
                                  "secondary_landing_date",
                                  "tertiary_landing_date",
                                  "departure_from_africa_date",
                                  "return_departure_day",
                                  "return_departure_month",
                                  "return_departure_year",
                                  "departure_region",
                                  "departure_broad_region",
                                  "departure_from_africa_day",
                                  "departure_from_africa_month",
                                  "departure_from_africa_year",
                                  "primary_embark_port",
                                  "secondary_embark_port",
                                  "primary_embark_region",
                                  "secondary_embark_region",
                                  "evergreen",
                                  "voyage_outcome_code",
                                  "slave_outcome_code",
                                  "capture_outcome_code",
                                  "owner_outcome_code",
                                  "female_embark_port1",
                                  "female_died_passage",
                                  "female_disembark_port1",
                                  "female_embark_port2",
                                  "female_embark_port3",
                                  "female_disembark_port2",
                                  "female_arrival_total",
                                  "female_embark_total",
                                  "female_death_passage",
                                  "female_disembark_total",
                                  "girl_embark_port1",
                                  "girl_died_passage",
                                  "girl_disembark_port1",
                                  "girl_embark_port2",
                                  "girl_embark_port3",
                                  "girl_disembark_port2",
                                  "girl_arrival_total",
                                  "pct_girl_embark",
                                  "pct_girl_landed",
                                  "pct_girl_arrival",
                                  "gun_count",
                                  "infant_embark_port1",
                                  "infant_died_passage",
                                  "infant_disembark_port1",
                                  "infant_embark_port2",
                                  "infant_embark_port3",
                                  "infant_disembark_port2",
                                  "avg_slave_price_jamaica",
                                  "primary_purchase_port",
                                  "purchase_location_imputed_region",
                                  "purchase_location_imputed_broad_region",
                                  "primary_sale_port",
                                  "male_embark_port1",
                                  "male_died_passage",
                                  "male_disembark_port1",
                                  "male_embark_port2",
                                  "male_embark_port3",
                                  "male_disembark_port2",
                                  "male_arrival_total",
                                  "male_embark_total",
                                  "male_death_passage",
                                  "male_disembark_total",
                                  "pct_male_embark",
                                  "pct_male_landed",
                                  "pct_male_arrival",
                                  "men_embark_port1",
                                  "men_died_passage",
                                  "men_disembark_port1",
                                  "men_embark_port2",
                                  "men_embark_port3",
                                  "men_disembark_port2",
                                  "men_arrival_total",
                                  "pct_men_embark",
                                  "pct_men_landed",
                                  "pct_men_arrival",
                                  "purchase_location_imputed_place",
                                  "disembark_port_imputed_region",
                                  "disembark_port_imputed_broad_region",
                                  "disembark_port_imputed_place",
                                  "nationality_imputed",
                                  "nationality",
                                  "slaves_carried_first_port",
                                  "slaves_carried_second_port",
                                  "slaves_carried_third_port",
                                  "crew_deserted_total",
                                  "port_before_crossing",
                                  "num_ports_before_purchase",
                                  "num_ports_americas_before_sale",
                                  "primary_owner",
                                  "secondary_owner",
                                  "tertiary_owner",
                                  "fourth_owner",
                                  "fifth_owner",
                                  "sixth_owner",
                                  "seventh_owner",
                                  "eighth_owner",
                                  "ninth_owner",
                                  "tenth_owner",
                                  "eleventh_owner",
                                  "twelfth_owner",
                                  "thirteenth_owner",
                                  "fourteenth_owner",
                                  "fifteenth_owner",
                                  "sixteenth_owner",
                                  "primary_purchase_location",
                                  "secondary_purchase_location",
                                  "tertiary_purchase_location",
                                  "construction_place",
                                  "registration_place",
                                  "departure_port",
                                  "return_port",
                                  "departure_port_imputed",
                                  "primary_disembark_region",
                                  "secondary_disembark_region",
                                  "disembark_region_1",
                                  "disembark_region_2",
                                  "disembark_region_3",
                                  "embark_region_1",
                                  "embark_region_2",
                                  "embark_region_3",
                                  "registration_region",
                                  "african_resistance_outcome_code",
                                  "return_region",
                                  "return_broad_region",
                                  "rig_type",
                                  "crew_died_pre_africa",
                                  "crew_died_in_africa",
                                  "crew_died_middle_passage",
                                  "crew_died_americas",
                                  "crew_died_return_voyage",
                                  "ship_name",
                                  "primary_sale_location",
                                  "slaves_arrival_first_port",
                                  "slave_death_africa",
                                  "slave_death_americas",
                                  "slave_death_passage",
                                  "slaves_disembarked_total",
                                  "slaves_disemark_first_port",
                                  "slaves_disemark_second_port",
                                  "slaves_disemark_third_port",
                                  "total_embarked_age",
                                  "total_landed_age",
                                  "total_arrival_age",
                                  "total_embarked_gender",
                                  "total_landed_gender",
                                  "total_arrival_gender",
                                  "total_embarked_slaves",
                                  "total_landed_slaves",
                                  "total_arrival_slaves",
                                  "slaves_embarked_total",
                                  "slaves_intented_second_port",
                                  "slaves_intented_first_port",
                                  "source_a",
                                  "source_b",
                                  "source_c",
                                  "source_d",
                                  "source_e",
                                  "source_f",
                                  "source_g",
                                  "source_h",
                                  "source_i",
                                  "source_j",
                                  "source_k",
                                  "source_l",
                                  "source_m",
                                  "source_n",
                                  "source_o",
                                  "source_p",
                                  "source_q",
                                  "source_r",
                                  "tonnage_imputed",
                                  "tonnage",
                                  "tonnage_type",
                                  "slaves_purchased_total",
                                  "slaves_departed_total",
                                  "slave_death_total_derived",
                                  "voyage_length_home_to_disembarkation_days",
                                  "voyage_length_africa_to_disembarkation_days",
                                  "middle_passage_length_days",
                                  "slave_death_passage_derived",
                                  "slave_mortality_rate",
                                  "women_embark_port1",
                                  "women_died_passage",
                                  "women_disembark_port1",
                                  "women_embark_port2",
                                  "women_embark_port3",
                                  "women_disembark_port2",
                                  "women_arrival_total",
                                  "pct_women_embark",
                                  "pct_women_landed",
                                  "pct_women_arrival",
                                  "voyage_grouping_code",
                                  "period_5_year",
                                  "period_10_year",
                                  "period_25_year",
                                  "period_100_year",
                                  "departure_from_africa_imputed_year",
                                  "landing_imputed_year",
                                  "voyage_start_imputed_year",
                                  "year_constructed",
                                  "registration_year",
                                  "voyage_grouping")

### Verify new column names and save; 274 columns, 36108 rows
glimpse(voyages_dataset)
names(voyages_dataset)

### Save the cleaned dataset
write_csv(voyages_dataset, file = "voyages_dataset.csv", na = "")

### Convert data types
convert_data_types <- function(df) { 
  df %>%
    mutate(
      ## voyages_meta_data
      voyage_id = as.integer(voyage_id), 
      evergreen = as.logical(evergreen),
      voyage_grouping_code = as.integer(voyage_grouping_code),
      voyage_grouping = as.integer(voyage_grouping),
      
      ## voyages_ships_nations_owners
      ship_name = as.character(ship_name),
      nationality = as.integer(nationality_code),
      tonnage = as.numeric(tonnage),
      tonnage_type = as.integer(tonnage_type),
      rig_type = as.integer(rig_type),
      gun_count = as.integer(gun_count),
      year_constructed = as.integer(year_constructed),
      construction_place = as.integer(construction_place),
      construction_region = as.integer(construction_region),
      registration_year = as.integer(registration_year),
      registration_place = as.integer(registration_place),
      registration_region = as.integer(registration_region),
      primary_owner = as.character(primary_owner),
      secondary_owner = as.character(secondary_owner),
      tertiary_owner = as.character(tertiary_owner),
      fourth_owner = as.character(fourth_owner),
      fifth_owner = as.character(fifth_owner),
      sixth_owner = as.character(sixth_owner),
      seventh_owner = as.character(seventh_owner),
      eighth_owner = as.character(eighth_owner),
      ninth_owner = as.character(ninth_owner),
      tenth_owner = as.character(tenth_owner),
      eleventh_owner = as.character(eleventh_owner),
      twelfth_owner = as.character(twelfth_owner),
      thirteenth_owner = as.character(thirteenth_owner),
      fourteenth_owner = as.character(fourteenth_owner),
      fifteenth_owner = as.character(fifteenth_owner),
      sixteenth_owner = as.character(sixteenth_owner),
      nationality_imputed = as.integer(nationality_imputed),
      tonnage_imputed = as.integer(tonnage_imputed),
      
      ## voyages_outcomes
      voyage_outcome_code = as.integer(voyage_outcome_code),
      slave_outcome_code = as.integer(slave_outcome_code),
      capture_outcome_code = as.integer(capture_outcome_code),
      owner_outcome_code = as.integer(owner_outcome_code),
      african_resistance_outcome_code = as.integer(african_resistance_outcome_code),
      
      ## voyages_itinerary
      departure_port = as.integer(departure_port),
      primary_embark_port = as.integer(primary_embark_port),
      secondary_embark_port = as.integer(secondary_embark_port),
      primary_embark_region = as.integer(primary_embark_region),
      secondary_embark_region = as.integer(secondary_embark_region),
      primary_disembark_port = as.integer(primary_disembark_port),
      secondary_disembark_port = as.integer(secondary_disembark_port),
      primary_disembark_region = as.integer(primary_disembark_region),
      secondary_disembark_region = as.integer(secondary_disembark_region),
      num_ports_before_purchase = as.integer(num_ports_before_purchase),
      primary_purchase_location = as.integer(primary_purchase_location),
      secondary_purchase_location = as.integer(secondary_purchase_location),
      tertiary_purchase_location = as.integer(tertiary_purchase_location),
      embark_region_1 = as.integer(embark_region_1),
      embark_region_2 = as.integer(embark_region_2),
      embark_region_3 = as.integer(embark_region_3),
      port_before_crossing = as.integer(port_before_crossing),
      num_ports_americas_before_sale = as.integer(num_ports_americas_before_sale),
      primary_sale_location = as.integer(primary_sale_location),
      secondary_sale_location = as.integer(secondary_sale_location),
      tertiary_sale_location = as.integer(tertiary_sale_location),
      disembark_region_1 = as.integer(disembark_region_1),
      disembark_region_2 = as.integer(disembark_region_2),
      disembark_region_3 = as.integer(disembark_region_3),
      return_port = as.integer(return_port),
      return_region = as.integer(return_region),
      return_broad_region = as.integer(return_broad_region),
      departure_region = as.integer(departure_region),
      departure_broad_region = as.integer(departure_broad_region),
      primary_purchase_port = as.integer(primary_purchase_port),
      primary_sale_port = as.integer(primary_sale_port),
      departure_port_imputed = as.integer(departure_port_imputed),
      purchase_location_imputed_place = as.integer(purchase_location_imputed_place),
      purchase_location_imputed_region = as.integer(purchase_location_imputed_region),
      purchase_location_imputed_broad_region = as.integer(purchase_location_imputed_broad_region),
      disembark_port_imputed_place = as.integer(disembark_port_imputed_place),
      disembark_port_imputed_region = as.integer(disembark_port_imputed_region),
      disembark_port_imputed_broad_region = as.integer(disembark_port_imputed_broad_region),
      
      ## voyages_dates
      voyage_start_day = as.integer(voyage_start_day),
      voyage_start_month = as.integer(voyage_start_month),
      voyage_start_year = as.integer(voyage_start_year),
      slave_purchase_start_day = as.integer(slave_purchase_start_day),
      slave_purchase_start_month = as.integer(slave_purchase_start_month),
      slave_purchase_start_year = as.integer(slave_purchase_start_year),
      departure_from_africa_day = as.integer(departure_from_africa_day),
      departure_from_africa_month = as.integer(departure_from_africa_month),
      departure_from_africa_year = as.integer(departure_from_africa_year),
      primary_landing_day = as.integer(primary_landing_day),
      primary_landing_month = as.integer(primary_landing_month),
      primary_landing_year = as.integer(primary_landing_year),
      secondary_landing_day = as.integer(secondary_landing_day),
      secondary_landing_month = as.integer(secondary_landing_month),
      secondary_landing_year = as.integer(secondary_landing_year),
      tertiary_landing_day = as.integer(tertiary_landing_day),
      tertiary_landing_month = as.integer(tertiary_landing_month),
      tertiary_landing_year = as.integer(tertiary_landing_year),
      return_departure_day = as.integer(return_departure_day),
      return_departure_month = as.integer(return_departure_month),
      return_departure_year = as.integer(return_departure_year),
      voyage_end_day = as.integer(voyage_end_day),
      voyage_end_month = as.integer(voyage_end_month),
      voyage_end_year = as.integer(voyage_end_year),
      voyage_start_date = as.Date(voyage_start_date),
      slave_purchase_date = as.Date(slave_purchase_date),
      departure_from_africa_date = as.Date(departure_from_africa_date),
      primary_landing_date = as.Date(primary_landing_date),
      secondary_landing_date = as.Date(secondary_landing_date),
      tertiary_landing_date = as.Date(tertiary_landing_date),
      return_departure_date = as.Date(return_departure_date),
      voyage_end_date = as.Date(voyage_end_date),
      middle_passage_length_days = as.integer(middle_passage_length_days),
      period_5_year = as.integer(period_5_year),
      period_10_year = as.integer(period_10_year),
      period_25_year = as.integer(period_25_year),
      period_100_year = as.integer(period_100_year),
      voyage_length_home_to_disembarkation_days = as.integer(voyage_length_home_to_disembarkation_days),
      voyage_length_africa_to_disembarkation_days = as.integer(voyage_length_africa_to_disembarkation_days),
      voyage_start_imputed_year = as.integer(voyage_start_imputed_year),
      departure_from_africa_imputed_year = as.integer(departure_from_africa_imputed_year),
      landing_imputed_year = as.integer(landing_imputed_year),
      
      ## voyages_crew
      captain_1_name = as.character(captain_1_name),
      captain_2_name = as.character(captain_2_name),
      captain_3_name = as.character(captain_3_name),
      crew_initial = as.integer(crew_initial),
      crew_after_purchase = as.integer(crew_after_purchase),
      crew_first_landing = as.integer(crew_first_landing),
      crew_return_start = as.integer(crew_return_start),
      crew_final = as.integer(crew_final),
      crew_unspecified = as.integer(crew_unspecified),
      crew_died_pre_africa = as.integer(crew_died_pre_africa),
      crew_died_in_africa = as.integer(crew_died_in_africa),
      crew_died_middle_passage = as.integer(crew_died_middle_passage),
      crew_died_americas = as.integer(crew_died_americas),
      crew_died_return_voyage = as.integer(crew_died_return_voyage),
      crew_died_total = as.integer(crew_died_total),
      crew_deserted_total = as.integer(crew_deserted_total),
      
      ## voyages_slave_numbers
      slaves_intented_first_port = as.integer(slaves_intented_first_port),
      slaves_intented_second_port = as.integer(slaves_intented_second_port),
      slaves_carried_first_port = as.integer(slaves_carried_first_port),
      slaves_carried_second_port = as.integer(slaves_carried_second_port),
      slaves_carried_third_port = as.integer(slaves_carried_third_port),
      slaves_purchased_total = as.integer(slaves_purchased_total),
      slaves_departed_total = as.integer(slaves_departed_total),
      slaves_arrival_first_port = as.integer(slaves_arrival_first_port),
      slaves_disemark_first_port = as.integer(slaves_disemark_first_port),
      slaves_disemark_second_port = as.integer(slaves_disemark_second_port),
      slaves_disemark_third_port = as.integer(slaves_disemark_third_port),
      slaves_embarked_total = as.integer(slaves_embarked_total),
      slaves_disembarked_total = as.integer(slaves_disembarked_total),
      
      ## voyages_slave_characteristics
      men_embark_port1 = as.integer(men_embark_port1),
      women_embark_port1 = as.integer(women_embark_port1),
      boy_embark_port1 = as.integer(boy_embark_port1),
      girl_embark_port1 = as.integer(girl_embark_port1),
      adult_embark_port1 = as.integer(adult_embark_port1),
      child_embark_port1 = as.integer(child_embark_port1),
      infant_embark_port1 = as.integer(infant_embark_port1),
      male_embark_port1 = as.integer(male_embark_port1),
      female_embark_port1 = as.integer(female_embark_port1),      
      men_died_passage = as.integer(men_died_passage),
      women_died_passage = as.integer(women_died_passage),
      boy_died_passage = as.integer(boy_died_passage),
      girl_died_passage = as.integer(girl_died_passage),
      adult_died_passage = as.integer(adult_died_passage),
      child_died_passage = as.integer(child_died_passage),
      infant_died_passage = as.integer(infant_died_passage),
      male_died_passage = as.integer(male_died_passage),
      female_died_passage = as.integer(female_died_passage),
      men_disembark_port1 = as.integer(men_disembark_port1),
      women_disembark_port1 = as.integer(women_disembark_port1),
      boy_disembark_port1 = as.integer(boy_disembark_port1),
      girl_disembark_port1 = as.integer(girl_disembark_port1),
      adult_disembark_port1 = as.integer(adult_disembark_port1),
      child_disembark_port1 = as.integer(child_disembark_port1),
      infant_disembark_port1 = as.integer(infant_disembark_port1),
      male_disembark_port1 = as.integer(male_disembark_port1),
      female_disembark_port1 = as.integer(female_disembark_port1),
      men_embark_port2 = as.integer(men_embark_port2),
      women_embark_port2 = as.integer(women_embark_port2),
      boy_embark_port2 = as.integer(boy_embark_port2),
      girl_embark_port2 = as.integer(girl_embark_port2),
      adult_embark_port2 = as.integer(adult_embark_port2),
      child_embark_port2 = as.integer(child_embark_port2),
      infant_embark_port2 = as.integer(infant_embark_port2),
      male_embark_port2 = as.integer(male_embark_port2),
      female_embark_port2 = as.integer(female_embark_port2),
      men_embark_port3 = as.integer(men_embark_port3),
      women_embark_port3 = as.integer(women_embark_port3),
      boy_embark_port3 = as.integer(boy_embark_port3),
      girl_embark_port3 = as.integer(girl_embark_port3),
      adult_embark_port3 = as.integer(adult_embark_port3),
      child_embark_port3 = as.integer(child_embark_port3),
      infant_embark_port3 = as.integer(infant_embark_port3),
      male_embark_port3 = as.integer(male_embark_port3),
      female_embark_port3 = as.integer(female_embark_port3),
      men_disembark_port2 = as.integer(men_disembark_port2),
      women_disembark_port2 = as.integer(women_disembark_port2),
      boy_disembark_port2 = as.integer(boy_disembark_port2),
      girl_disembark_port2 = as.integer(girl_disembark_port2),
      adult_disembark_port2 = as.integer(adult_disembark_port2),
      child_disembark_port2 = as.integer(child_disembark_port2),
      infant_disembark_port2 = as.integer(infant_disembark_port2),
      male_disembark_port2 = as.integer(male_disembark_port2),
      female_disembark_port2 = as.integer(female_disembark_port2),
      slave_death_africa = as.integer(slave_death_africa),
      slave_death_passage = as.integer(slave_death_passage),
      slave_death_americas = as.integer(slave_death_americas),
      adult_embark_total = as.integer(adult_embark_total),
      child_embark_total = as.integer(child_embark_total),
      male_embark_total = as.integer(male_embark_total),
      female_embark_total = as.integer(female_embark_total),
      total_embarked_slaves = as.integer(total_embarked_slaves),
      total_embarked_age = as.integer(total_embarked_age),
      total_embarked_gender = as.integer(total_embarked_gender),
      pct_men_embark = as.numeric(pct_men_embark),
      pct_women_embark = as.numeric(pct_women_embark),
      pct_boy_embark = as.numeric(pct_boy_embark),
      pct_girl_embark = as.numeric(pct_girl_embark),
      pct_child_embark = as.numeric(pct_child_embark),
      pct_male_embark = as.numeric(pct_male_embark),
      adult_death_passage = as.integer(adult_death_passage),
      child_death_passage = as.integer(child_death_passage),
      male_death_passage = as.integer(male_death_passage),
      female_death_passage = as.integer(female_death_passage),
      adult_disembark_total = as.integer(adult_disembark_total),
      child_disembark_total = as.integer(child_disembark_total),
      male_disembark_total = as.integer(male_disembark_total),
      female_disembark_total = as.integer(female_disembark_total),
      total_landed_slaves = as.integer(total_landed_slaves),
      total_landed_age = as.integer(total_landed_age),
      total_landed_gender = as.integer(total_landed_gender),
      pct_men_landed = as.numeric(pct_men_landed),
      pct_women_landed = as.numeric(pct_women_landed),
      pct_boy_landed = as.numeric(pct_boy_landed),
      pct_girl_landed = as.numeric(pct_girl_landed),
      pct_child_landed = as.numeric(pct_child_landed),
      pct_male_landed = as.numeric(pct_male_landed),
      men_arrival_total = as.integer(men_arrival_total),
      women_arrival_total = as.integer(women_arrival_total),
      boy_arrival_total = as.integer(boy_arrival_total),
      girl_arrival_total = as.integer(girl_arrival_total),
      adult_arrival_total = as.integer(adult_arrival_total),
      child_arrival_total = as.integer(child_arrival_total),
      male_arrival_total = as.integer(male_arrival_total),
      female_arrival_total = as.integer(female_arrival_total),
      total_arrival_slaves = as.integer(total_arrival_slaves),
      total_arrival_age = as.integer(total_arrival_age),
      total_arrival_gender = as.integer(total_arrival_gender),
      pct_men_arrival = as.numeric(pct_men_arrival),
      pct_women_arrival = as.numeric(pct_women_arrival),
      pct_boy_arrival = as.numeric(pct_boy_arrival),
      pct_girl_arrival = as.numeric(pct_girl_arrival),
      pct_child_arrival = as.numeric(pct_child_arrival),
      pct_male_arrival = as.numeric(pct_male_arrival),
      slave_death_total_derived = as.integer(slave_death_total_derived),
      slave_death_passage_derived = as.integer(slave_death_passage_derived), 
      slave_mortality_rate = as.numeric(slave_mortality_rate),
      avg_slave_price_jamaica = as.numeric(avg_slave_price_jamaica),
      
      ## voyages_sources
      source_a = as.character(source_a),
      source_b = as.character(source_b),
      source_c = as.character(source_c),
      source_d = as.character(source_d),
      source_e = as.character(source_e),
      source_f = as.character(source_f),
      source_g = as.character(source_g),
      source_h = as.character(source_h),
      source_i = as.character(source_i),
      source_j = as.character(source_j),
      source_k = as.character(source_k),
      source_l = as.character(source_l),
      source_m = as.character(source_m),
      source_n = as.character(source_n),
      source_o = as.character(source_o),
      source_p = as.character(source_p),
      source_q = as.character(source_q),
      source_r = as.character(source_r)
    )
}

### Check data types after conversion
str(voyages_dataset)

clean_table <- function(df) {
  df <- df %>%
    # Trim whitespace from character columns
    mutate(across(where(is.character), stringr::str_trim)) %>%
    
    # Convert empty strings to NA
    mutate(across(where(is.character), ~ na_if(., ""))) %>%
    
    # Remove extra spaces inside text values
    mutate(across(where(is.character), stringr::str_squish)) %>%
    
    # Title for Proper Nouns
    mutate(across(where(is.character), stringr::str_to_title)) %>%
    
    # Ensure correct data types
    mutate(voyage_id = as.integer(voyage_id)) %>%
    mutate(across(contains("date"), \(x) as.Date(x, format = "%Y-%m-%d"))) %>%
    mutate(across(where(is.numeric), as.numeric))
  
  # Convert evergreen if present
  if ("evergreen" %in% colnames(df)) {
    df <- df %>% mutate(evergreen = as.logical(evergreen))
  }
  
  # Remove duplicates
  df <- df %>% distinct(voyage_id, .keep_all = TRUE)
  
  return(df)
}

### Apply Cleaning Function to voyages_dataset.csv
voyages_dataset <- clean_table(voyages_dataset)

### Save the cleaned dataset
write_csv(voyages_dataset, file = "voyages_dataset.csv", na = "")

### Create nine relational tables from voyages_dataset.csv
### 1. voyages_meta_data
voyages_meta_data <- voyages_dataset[ , c(1,88,264,274)]
if (nrow(voyages_meta_data) > 0) {
  write_csv(voyages_meta_data, file = "voyages_meta_data.csv", na = "")
}
head(voyages_meta_data)

### 2. voyages_ships_nations_owners
voyages_ships_nations_owners <- voyages_dataset[ , c(1,203,153,244,245,197,113,272,180,42,273,181,193,161:176,152,243)]
if (nrow(voyages_ships_nations_owners) > 0) {
  write_csv(voyages_ships_nations_owners, file = "voyages_ships_nations_owners.csv", na = "")
}
head(voyages_ships_nations_owners)

### 3. voyages_outcomes
voyages_outcomes <- voyages_dataset[ , c(1,89:92,194)]
if (nrow(voyages_outcomes) > 0) {
  write_csv(voyages_outcomes, file = "voyages_outcomes.csv", na = "")
}
head(voyages_outcomes)

### 4. voyages_itinerary
voyages_itinerary <- voyages_dataset[ , c(1,182,84:87,14,15,185,186,159,177:179,190:192,158,160,204,5,6,187:189,183,195,196,79,80,121,124,184,148,122,123,151,149,150)]
if (nrow(voyages_itinerary) > 0) {
  write_csv(voyages_itinerary, file = "voyages_itinerary.csv", na = "")
}
head(voyages_itinerary)

### 5. voyages_dates
voyages_dates <- voyages_dataset[ , c(1,67,69,70,50:52,81:83,53:61,76:78,62:64,66,65,75,72:74,68,71,251,265:268,249,250,271,269,270)]
if (nrow(voyages_dates) > 0) {
  write_csv(voyages_dates, file = "voyages_dates.csv", na = "")
}
head(voyages_dates)

### 6. voyages_crew
voyages_crew <- voyages_dataset[ , c(1,26:28,44:48,43,198:202,49,157)]
if (nrow(voyages_crew) > 0) {
  write_csv(voyages_crew, file = "voyages_crew.csv", na = "")
}
head(voyages_crew)

### 7. voyages_slave_numbers
voyages_slave_numbers <- voyages_dataset[ , c(1,224,223,154:156,246,247,205,210:212,222,209)]
if (nrow(voyages_slave_numbers) > 0) {
  write_csv(voyages_slave_numbers, file = "voyages_slave_numbers.csv", na = "")
}
head(voyages_slave_numbers)

### 8. voyages_slave_characteristics
voyages_slave_characteristics <- voyages_dataset[ , c(1,138,254,16,103,7,32,114,125,93,139,255,17,104,8,33,115,126,94,140,256,18,105,9,34,116,127,95,141,257,19,106,10,35,117,128,96,142,158,20,107,11,36,118,129,97,143,259,21,108,12,37,119,130,98,206,208,207,2,29,132,100,219,213,216,145,261,23,110,39,135,3,30,133,101,4,31,134,102,220,214,217,146,262,24,111,40,136,144,260,22,109,13,38,131,99,221,215,218,147,263,25,112,41,137,248,252,253,120)]
if (nrow(voyages_slave_characteristics) > 0) {
  write_csv(voyages_slave_characteristics, file = "voyages_slave_characteristics.csv", na = "")
}
head(voyages_slave_characteristics)

### 9. voyages_sources
voyages_sources <- voyages_dataset[ , c(1,225:242)]
if (nrow(voyages_sources) > 0) {
  write_csv(voyages_sources, file = "voyages_sources.csv", na = "")
}
head(voyages_sources)

### Check Foreign Key Integrity
# Check for missing voyage_id references in each table
missing_voyage_ids <- list(
  ships_nations_owners = anti_join(voyages_ships_nations_owners, voyages_meta_data, by = "voyage_id"),
  outcomes = anti_join(voyages_outcomes, voyages_meta_data, by = "voyage_id"),
  itinerary = anti_join(voyages_itinerary, voyages_meta_data, by = "voyage_id"),
  dates = anti_join(voyages_dates, voyages_meta_data, by = "voyage_id"),
  crew = anti_join(voyages_crew, voyages_meta_data, by = "voyage_id"),
  slave_numbers = anti_join(voyages_slave_numbers, voyages_meta_data, by = "voyage_id"),
  slave_characteristics = anti_join(voyages_slave_characteristics, voyages_meta_data, by = "voyage_id"),
  sources = anti_join(voyages_sources, voyages_meta_data, by = "voyage_id")
)

# Display tables with missing foreign key references
for (table_name in names(missing_voyage_ids)) {
  if (nrow(missing_voyage_ids[[table_name]]) > 0) {
    cat("\n WARNING: Missing voyage_id references in", table_name, "\n")
    print(head(missing_voyage_ids[[table_name]]))
  }
}

### Create Entity Relationship Diagram with {dm}

# Create the dm_model with all required tables
dm_model <- dm(
  voyages_meta_data,
  voyages_ships_nations_owners,
  voyages_outcomes,
  voyages_itinerary,
  voyages_dates,
  voyages_crew,
  voyages_slave_numbers,
  voyages_slave_characteristics,
  voyages_sources
) %>%
  
  # Primary keys for each table
  dm_add_pk(voyages_meta_data, voyage_id) %>%
  dm_add_pk(voyages_ships_nations_owners, voyage_id) %>%
  dm_add_pk(voyages_outcomes, voyage_id) %>%
  dm_add_pk(voyages_itinerary, voyage_id) %>%
  dm_add_pk(voyages_dates, voyage_id) %>%
  dm_add_pk(voyages_crew, voyage_id) %>%
  dm_add_pk(voyages_slave_numbers, voyage_id) %>%
  dm_add_pk(voyages_slave_characteristics, voyage_id) %>%
  dm_add_pk(voyages_sources, voyage_id) %>%
  
  # Foreign key relationships (each table to voyages_meta_data on voyage_id)
  dm_add_fk(voyages_ships_nations_owners, voyage_id, voyages_meta_data) %>%
  dm_add_fk(voyages_outcomes, voyage_id, voyages_meta_data) %>%
  dm_add_fk(voyages_itinerary, voyage_id, voyages_meta_data) %>%
  dm_add_fk(voyages_dates, voyage_id, voyages_meta_data) %>%
  dm_add_fk(voyages_crew, voyage_id, voyages_meta_data) %>%
  dm_add_fk(voyages_slave_numbers, voyage_id, voyages_meta_data) %>%
  dm_add_fk(voyages_slave_characteristics, voyage_id, voyages_meta_data) %>%
  dm_add_fk(voyages_sources, voyage_id, voyages_meta_data)

# Visualize the ERD
dm_draw(dm_model)

# Save the ERD as SVG
dm_draw(dm_model) %>% export_svg() %>% writeLines("voyages_erd.svg")

# Check primary and foreign key restraints
dm_examine_constraints(dm_model)

### Final Integrity Check
list_of_tables <- list(
  meta_data = voyages_meta_data,
  ships_nations_owners = voyages_ships_nations_owners,
  outcomes = voyages_outcomes,
  itinerary = voyages_itinerary,
  dates = voyages_dates,
  crew = voyages_crew,
  slave_numbers = voyages_slave_numbers,
  slave_characteristics = voyages_slave_characteristics,
  sources = voyages_sources
)

# Display any tables with missing voyage_id values
for (table_name in names(list_of_tables)) {
  missing_voyage_ids <- anti_join(list_of_tables[[table_name]], voyages_meta_data, by = "voyage_id")
  if (nrow(missing_voyage_ids) > 0) {
    cat("\n WARNING: Missing voyage_id references in", table_name, "\n")
    print(head(missing_voyage_ids))
  }
}

### Summary of Cleaned Data
for (table_name in names(list_of_tables)) {
  cat("\n Summary of", table_name, "\n")
  print(summary(list_of_tables[[table_name]]))
}
